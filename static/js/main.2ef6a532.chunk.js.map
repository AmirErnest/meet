{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberofEvents.js","mock-data.js","api.js","WelcomeScreen.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showMore","this","setState","event","description","console","log","props","className","summary","creator","email","start","dateTime","location","desc","onClick","showText","Component","EventList","events","map","id","Alert","getStyle","color","style","zIndex","fontSize","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","display","NumberofEvents","numberOfEvents","errorText","updateEventCount","eventCount","onHandleEventCount","htmlFor","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","href","startsWith","NProgress","done","getAccessToken","token","navigator","onLine","getItem","JSON","parse","url","axios","get","data","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","WelcomeScreen","showWelcomeScreen","align","class","src","alt","rel","App","currentLocation","undefined","locationEvents","slice","handleEventCount","mounted","accesssToken","isTokenValid","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.2ef6a532.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Event extends Component {\r\n\r\n  state = {\r\n    showMore: false\r\n  }\r\n\r\n  showMore(){\r\n    if(this.state.showMore === false) {\r\n      this.setState({showMore: true})\r\n    } else {\r\n      this.setState({showMore:false})\r\n    }\r\n  }\r\n\r\n  showText() {\r\n    if(this.state.showMore === false) {\r\n     return \"Show More\"\r\n    } else {\r\n      return \"Show Less\";\r\n    }\r\n  }\r\n\r\n  desc(event) {\r\n    if(this.state.showMore === false) {\r\n     return \"\"\r\n    } else {\r\n      return event.description;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.showMore);\r\n    const { event } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"event\">\r\n          <h2>{event.summary}</h2>\r\n          <p><b>Creator:</b> {event.creator.email}</p>\r\n          <p><b>Start Time:</b> {event.start.dateTime}</p>\r\n          <p><b>Location:</b> {event.location}</p>\r\n          { this.state.showMore === true ? (\r\n            <p className=\"description\">{this.desc(event)}</p>\r\n          ) : null } \r\n          <button className=\"details-btn\" onClick={() => {this.showMore(event)}}>{this.showText()}</button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event'; \r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const {events} = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id} className=\"EventItem\">\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{zIndex: \"1\", fontSize: \"15px\"}} className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'black';\r\n  }\r\n}\r\n\r\nexport { InfoAlert };\r\nexport { ErrorAlert };\r\nexport { WarningAlert };","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n  \r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: false,\r\n  }\r\n  \r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText: 'We can not find the city you are looking for. Please try another city',\r\n      });\r\n    } else { \r\n    this.setState({\r\n      query: value,\r\n      infoText:'',\r\n      suggestions,\r\n      showSuggestions: true\r\n    });\r\n  }\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false,\r\n      infoText: ''\r\n    });\r\n\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert text={this.state.infoText} />\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          placeholder=\"Search for city\"\r\n          value= {this.state.query}\r\n          onChange={this.handleInputChanged} \r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n           <li \r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CitySearch; ","import React, { Component, useState } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberofEvents extends Component {\r\n  state = {\r\n    numberOfEvents: 15,\r\n    errorText: '',\r\n  }\r\n\r\n  updateEventCount = (event) => {\r\n    const eventCount = event.target.value;\r\n    if(eventCount < 1 || eventCount > 15) {\r\n    return this.setState({\r\n      numberOfEvents: eventCount,\r\n      errorText: 'Please select a number between 1-15'\r\n    });\r\n  } else {\r\n    this.setState({\r\n      numberOfEvents: eventCount,\r\n      errorText: ''\r\n    });\r\n  }\r\n  this.props.onHandleEventCount(eventCount);\r\n  };\r\n\r\n  render() { \r\n    return (\r\n      <div className=\"numberOfEvents\">\r\n        <ErrorAlert text={this.state.errorText} />\r\n        <label htmlFor=\"number\">Events per page: </label>\r\n          <input \r\n          type=\"number\" \r\n          id=\"number\" \r\n          className=\"numberInput\"\r\n          value={this.state.numberOfEvents}\r\n          placeholder=\"number of events\" \r\n          onChange={this.updateEventCount} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberofEvents;","const mockData = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"organizer\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"start\": {\r\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n     \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n     \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n     \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n   },\r\n   {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"organizer\": {\r\n     \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n     \"self\": true\r\n    },\r\n    \"start\": {\r\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n     \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n     \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n     \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n     \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n   }\r\n  ];\r\n\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n/**\r\n *\r\n * @param {*} events:\r\n * \r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n\r\n export const extractLocations = (events) => {\r\n   console.log(events);\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://mchhj97rbf.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nexport const getEvents = async () => {\r\n    if (window.location.href.startsWith(\"http://localhost\")) {\r\n      NProgress.done();\r\n      return mockData;\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if(!navigator.onLine){\r\n      const events = localStorage.getItem(\"lastEvents\");\r\n      NProgress.done();\r\n      return events?JSON.parse(events).events:[];\r\n    }\r\n  \r\n    if (token) {\r\n      removeQuery();\r\n      const url = 'https://mchhj97rbf.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n      const result = await axios.get(url);\r\n      if (result.data) {\r\n        console.log(result.data.events);\r\n        var locations = extractLocations(result.data.events);\r\n        localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n        localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n      }\r\n      NProgress.done();\r\n      return result.data.events;\r\n    }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        'https://mchhj97rbf.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url'\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}","import React from \"react\";\r\nimport './WelcomeScreen.css';\r\n \r\nfunction WelcomeScreen(props) {\r\n   return props.showWelcomeScreen ?\r\n     (\r\n       <div   className=\"WelcomeScreen\">\r\n         <h1> Welcome to the Meet app </h1>\r\n         <h4> Log in to see upcoming events around the world for full-stack developers </h4>\r\n         <div   className=\"button_cont\"   align=\"center\">\r\n           <div   class=\"google-btn\">\r\n             <div   class=\"google-icon-wrapper\">\r\n               <img\r\n                 class=\"google-icon\"\r\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                 alt=\"Google sign-in\"\r\n               />\r\n             </div>\r\n             <button onClick={ ()=> { props.getAccessToken() }}\r\n               rel=\"nofollow noopener\"\r\n               class=\"btn-text\"\r\n             >\r\n               <b>Sign in with google</b>\r\n             </button>\r\n           </div>\r\n         </div>\r\n         <a\r\n           href=\"https://AmirErnest.github.io/meet/privacy.html\"\r\n           rel=\"nofollow noopener\">\r\n           Privacy policy\r\n        </a>\r\n       </div>\r\n     )\r\n     : null\r\n}\r\n \r\nexport default WelcomeScreen;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberofEvents from './NumberofEvents';\r\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\r\nimport WelcomeScreen from './WelcomeScreen';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: 15,\r\n    currentLocation: 'all',\r\n    showWelcomeScreen: undefined\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.mounted = true;\r\n    const accesssToken = localStorage.getItem('access_token');\r\n    const isTokenValid = (await checkToken(accesssToken)).error ? false : true;\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get(\"code\");\r\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n    if ((code || isTokenValid) && this.mounted) {\r\n      getEvents().then((events) => {\r\n      console.log(events);\r\n      if (this.mounted) {\r\n        this.setState({ events, locations: extractLocations(events) });\r\n      }\r\n    });\r\n  }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n  }\r\n\r\n    //update events counts and location\r\n  updateEvents = (location) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents = (location === 'all') ?\r\n      events :\r\n      events.filter((event) => event.location === location);\r\n      const {numberOfEvents} = this.state;\r\n      this.setState({\r\n        //events: locationEvents\r\n        events: locationEvents.slice(0, numberOfEvents),\r\n        currentLocation: location,\r\n      });\r\n    });\r\n  }\r\n\r\n    // handle pagination\r\n    handleEventCount = (eventCount) => {\r\n      const { currentLocation } = this.state;\r\n      this.setState({\r\n        numberOfEvents: eventCount\r\n      });\r\n      this.updateEvents(currentLocation);\r\n    }\r\n\r\n  render() {\r\n    if(this.state.showWelcomeScreen === undefined) return <div className= \"App\" />\r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents}/>\r\n        <NumberofEvents onHandleEventCount={this.handleEventCount} numberOfEvents={this.state.numberOfEvents} />\r\n        <EventList events={this.state.events}/>\r\n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen} getAccessToken={ ()=> {getAccessToken() }} />\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default App; \r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n//initialization/config line provided by the Atatus installation\r\natatus.config('a24b842577dd453cb7456b4ddb2dc5da').install();\r\n"],"sourceRoot":""}